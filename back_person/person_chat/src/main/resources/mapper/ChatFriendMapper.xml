<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.person.chat.dao.ChatFriendMapper">

    <select id="listChatFriendByUserId" resultType="chatFriendVO">
        SELECT u.id,u.user_name, u.photo,
	    if (count( if ( cf.is_read = 0, false, NULL ) ) = 0, true, false) `read`
        FROM chat_user_friend uf
	    INNER JOIN sys_user u ON uf.friend_user_id = u.id
	    LEFT JOIN chat_friend cf ON uf.friend_user_id = cf.my_user_id
	    and uf.my_user_id = cf.friend_user_id
		WHERE uf.my_user_id = #{myUserId}
	    GROUP BY uf.friend_user_id

    </select>

    <select id="listChatFriendByFriendUserId" resultType="chatFriendVO">
        SELECT u.id, u.user_name, u.photo,
        if( count( if ( cf.is_read = 0, false, NULL )) = 0, true, false) `read`
        from chat_user_friend uf
		inner join sys_user u on uf.my_user_id = u.id
		left join chat_friend cf on uf.my_user_id = cf.my_user_id
        WHERE uf.friend_user_id = #{friendUserId}
        GROUP BY uf.my_user_id
    </select>

    <select id="findChatFriend" resultType="chatFriendVO">
        SELECT u.id, u.user_name, u.photo,
        if( count( if ( cf.is_read = 0, false, NULL )) = 0, true, false) `read`
        from chat_user_friend uf
		inner join sys_user u on uf.friend_user_id = u.id
        LEFT JOIN chat_friend cf ON uf.friend_user_id = cf.my_user_id
	    and uf.my_user_id = cf.friend_user_id
	    WHERE uf.my_user_id = #{myUserId} and uf.friend_user_id = #{friendUserId}
        GROUP BY uf.friend_user_id
    </select>

    <select id="listChatFriendMsg" resultType="chatFriend">
        <!-- 登录人发送的信息 -->
        SELECT cf.id, cf.my_user_id, cf.friend_user_id, cf.msg, cf.create_time
        from chat_user_friend uf
        inner join chat_friend cf on uf.friend_user_id = cf.friend_user_id and uf.friend_user_id = cf.friend_user_id
        WHERE cf.my_user_id = #{myUserId} and cf.friend_user_id = #{friendUserId}
        union
        <!-- 发送给登录人的信息 -->
        SELECT cf.id, cf.my_user_id, cf.friend_user_id, cf.msg, cf.create_time
        from chat_user_friend uf
        inner join chat_friend cf on uf.my_user_id = cf.my_user_id and uf.friend_user_id = cf.friend_user_id
        WHERE cf.friend_user_id = #{myUserId} and cf.my_user_id = #{friendUserId}
        <!-- 时间排序-->
        order by create_time
    </select>

    <insert id="insertChatFriend">
        insert into chat_friend (id, my_user_id, friend_user_id, msg, create_time)
        values (#{id}, #{myUserId}, #{friendUserId}, #{msg}, now() );
    </insert>

    <update id="updateChatFriendRead" parameterType="updateChatFriendMsgReq">
        update chat_friend set is_read = 1 where my_user_id = #{friendUserId} and friend_user_id = #{myUserId};
    </update>

    <delete id="deleteChatFriend">
        delete from chat_friend
        where my_user_id = #{myUserId} and friend_user_id = #{friendUserId}
    </delete>


</mapper>
