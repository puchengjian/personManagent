<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.person.system.dao.UserMapper">

    <sql id="userSql">
        u.id, u.user_name, u.account, u.password, u.user_age, u.phone, u.photo, u.email, u.enabled, u.create_time, u.update_time
    </sql>

    <select id="findUserByAccount" resultType="userVO">
        select r.role_name, r.id roleId,
        <include refid="userSql"/>
        from sys_user u
        left join sys_user_role sur on u.id = sur.user_id
        left join sys_role r on sur.role_id = r.id
        where account = #{account}
    </select>

    <select id="listUser" resultType="userVO" parameterType="listUserReq">
        select r.role_name,
        <include refid="userSql"/>
        from sys_user u
        left join sys_user_role sur on u.id = sur.user_id
        left join sys_role r on sur.role_id = r.id
        <if test="searchValue != null">
            where ${searchKey} like concat('%', #{searchValue},'%')
        </if>
        order by u.create_time
        limit #{page}, #{size}
    </select>

    <select id="countUser" resultType="java.lang.Integer" parameterType="listUserReq">
        select count(1) from sys_user
        <if test="searchValue != null">
            where ${searchKey} like concat('%', #{searchValue},'%')
        </if>
    </select>

    <select id="findUserByPhone" resultType="user">
        select
        <include refid="userSql"/>
        from sys_user u
        where phone = #{phone}
    </select>

    <select id="findUserById" resultType="userVO">
        select r.id roleId,
        <include refid="userSql"/>
        from sys_user u
        left join sys_user_role sur on u.id = sur.user_id
        left join sys_role r on sur.role_id = r.id
        where u.id = #{id}
    </select>

    <insert id="insertUser" parameterType="user">
        insert into sys_user (id, user_name, account, password, user_age, phone, photo, email, create_time, update_time)
        values (#{id}, #{userName} , #{account}, #{password}, #{userAge}, #{phone}, #{photo}, #{email}, now(), now() );
    </insert>

    <update id="updateUserById" parameterType="user">
        update sys_user
        <set>
            <if test="userName != null">
                user_name = #{userName},
            </if>
            <if test="userAge != null">
                user_age = #{userAge},
            </if>
            <if test="phone != null">
                phone = #{phone},
            </if>
            <if test="photo != null">
                photo = #{photo},
            </if>
            <if test="email != null">
                email = #{email},
            </if>
            enabled = #{enabled},
            update_time = now()
        </set>
        where id = #{id}
    </update>

    <delete id="deleteUserById">
        delete from sys_user
        where id = #{id}
    </delete>

    <update id="updateUserPhoto">
      update sys_user set photo = #{photo}  where id = #{userId} ;
    </update>



</mapper>